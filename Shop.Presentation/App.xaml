<Application x:Class="Shop.Presentation.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Shop.Presentation"
             Startup="Application_Startup"
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Application.Resources>
        <ResourceDictionary>



            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Views/Styles/Scrollbar.xaml" />
                <ResourceDictionary Source="Views/Styles/HoverButtonStyle.xaml" />
                <ResourceDictionary Source="Views/Styles/CustomPasswordBox.xaml" />
                <ResourceDictionary Source="Views/Styles/CustomTextBox.xaml" />
                <ResourceDictionary Source="Views/Styles/CustomRichTextBoxStyle.xaml" />
                <ResourceDictionary Source="Views/Styles/CustomDataGrid.xaml" />
                <ResourceDictionary Source="Views/Styles/PasswordBoxStyle.xaml" />
                <ResourceDictionary Source="Views/Styles/RadioButtonStyle.xaml" />
                <ResourceDictionary Source="Views/Styles/UnderlineTextOnHover.xaml" />
            </ResourceDictionary.MergedDictionaries>


            <SolidColorBrush x:Key="gray"
                             Color="#9C9EA2" />
            <SolidColorBrush x:Key="blue"
                             Color="#529DFF" />
            <SolidColorBrush x:Key="aqua"
                             Color="#2DD4BF" />
            <SolidColorBrush x:Key="green"
                             Color="#26D12C" />
            <SolidColorBrush x:Key="red"
                             Color="#FF0000" />
            <SolidColorBrush x:Key="lightGray"
                             Color="#E8E8E8" />
            <SolidColorBrush x:Key="white"
                             Color="#FAFAFA" />
            <FontFamily x:Key="Roboto">/Assets/Fonts/#Roboto</FontFamily>

            <SolidColorBrush x:Key="ProgressBar.Progress"
                             Color="#FF06B025" />
            <SolidColorBrush x:Key="ProgressBar.Background"
                             Color="#FFE6E6E6" />
            <SolidColorBrush x:Key="ProgressBar.Border"
                             Color="#FFBCBCBC" />

            <Style x:Key="RoundProgressBar"
                   TargetType="{x:Type ProgressBar}">
                <Setter Property="Foreground"
                        Value="{StaticResource ProgressBar.Progress}" />
                <Setter Property="Background"
                        Value="{StaticResource ProgressBar.Background}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ProgressBar.Border}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid x:Name="TemplateRoot">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Determinate" />
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                                    <EasingDoubleKeyFrame KeyTime="0"
                                                                          Value="0.25" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:1"
                                                                          Value="0.25" />
                                                    <EasingDoubleKeyFrame KeyTime="0:0:2"
                                                                          Value="0.25" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation"
                                                                              Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                                    <EasingPointKeyFrame KeyTime="0"
                                                                         Value="-0.5,0.5" />
                                                    <EasingPointKeyFrame KeyTime="0:0:1"
                                                                         Value="0.5,0.5" />
                                                    <EasingPointKeyFrame KeyTime="0:0:2"
                                                                         Value="1.5,0.5" />
                                                </PointAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" />
                                <Rectangle x:Name="PART_Track" />
                                <Grid x:Name="PART_Indicator"
                                      ClipToBounds="true"
                                      HorizontalAlignment="Left">
                                    <Rectangle x:Name="Indicator"
                                               Fill="{TemplateBinding Foreground}"
                                               RadiusX="2"
                                               RadiusY="2" />
                                    <Rectangle x:Name="Animation"
                                               Fill="{TemplateBinding Foreground}"
                                               RadiusX="2"
                                               RadiusY="2"
                                               RenderTransformOrigin="0.5,0.5">
                                        <Rectangle.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform />
                                            </TransformGroup>
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation"
                                         Value="Vertical">
                                    <Setter Property="LayoutTransform"
                                            TargetName="TemplateRoot">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsIndeterminate"
                                         Value="true">
                                    <Setter Property="Visibility"
                                            TargetName="Indicator"
                                            Value="Collapsed" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="TextBlock">
                <Setter Property="FontFamily"
                        Value="{StaticResource Roboto}" />
            </Style>
            <Style x:Key="ColumnHeaderGripperStyle"
                   TargetType="{x:Type Thumb}">
                <Setter Property="Width"
                        Value="8" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Cursor"
                        Value="SizeWE" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--#region Custom BUttonStyle-->

            <Style x:Key="CustomButtonStyle"
                   TargetType="Button">
                <Setter Property="FontSize"
                        Value="14" />
                <Setter Property="Cursor"
                        Value="Hand" />
                <Setter Property="Foreground"
                        Value="{StaticResource gray}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    CornerRadius="6">

                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="BorderBrush"
                                Value="#2DD4BF" />
                        <Setter Property="Foreground"
                                Value="#2DD4BF" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--#endregion-->

            <!--#region CombBox-->

            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                                       StrokeDashArray="1 2"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       SnapsToDevicePixels="true"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="TextBox.Static.Background"
                             Color="#FFFFFFFF" />
            <Style x:Key="ComboBoxEditableTextBox"
                   TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="AllowDrop"
                        Value="true" />
                <Setter Property="MinWidth"
                        Value="0" />
                <Setter Property="MinHeight"
                        Value="0" />
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="ScrollViewer.PanningMode"
                        Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Background="Transparent"
                                          FontSize="14"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="ComboBox.Static.Glyph"
                             Color="#FF606060" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Border"
                             Color="#FFABADB3" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background"
                             Color="White" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border"
                             Color="White" />
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFECF4FC"
                              Offset="0.0" />
                <GradientStop Color="#FFDCECFC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph"
                             Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border"
                             Color="#FF7EB4EA" />
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFEBF4FC"
                              Offset="0.0" />
                <GradientStop Color="#FFDCECFC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border"
                             Color="#FF7EB4EA" />
            <LinearGradientBrush x:Key="ComboBox.Pressed.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFDAECFC"
                              Offset="0.0" />
                <GradientStop Color="#FFC4E0FC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Glyph"
                             Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border"
                             Color="#FF569DE5" />
            <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFDAEBFC"
                              Offset="0.0" />
                <GradientStop Color="#FFC4E0FC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border"
                             Color="#FF569DE5" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Background"
                             Color="#FFF0F0F0" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Border"
                             Color="#FFD9D9D9" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Glyph"
                             Color="#FFBFBFBF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border"
                             Color="#FFBFBFBF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background"
                             Color="white" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border"
                             Color="Transparent" />
            <Style x:Key="ComboBoxToggleButton"
                   TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Focusable"
                        Value="false" />
                <Setter Property="ClickMode"
                        Value="Press" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="templateRoot"
                                    Background="White"
                                    CornerRadius="6"
                                    BorderBrush="{StaticResource gray}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Border x:Name="splitBorder"
                                        HorizontalAlignment="Right"
                                        Margin="0 0 8 6"
                                        Width="36"
                                        Height="24">
                                    <Path x:Name="arrow" Data="M19.497 7.989L12 15.297L4.50299 7.989C4.36905 7.85815 4.18924 7.7849 4.00199 7.7849C3.81475 7.7849 3.63493 7.85815 3.50099 7.989C3.43614 8.05255 3.38461 8.12839 3.34944 8.2121C3.31426 8.29581 3.29614 8.3857 3.29614 8.4765C3.29614 8.5673 3.31426 8.65719 3.34944 8.74089C3.38461 8.8246 3.43614 8.90045 3.50099 8.964L11.4765 16.74C11.6166 16.8765 11.8044 16.9529 12 16.9529C12.1956 16.9529 12.3834 16.8765 12.5235 16.74L20.499 8.9655C20.5643 8.90191 20.6162 8.82587 20.6517 8.74188C20.6871 8.6579 20.7054 8.56766 20.7054 8.4765C20.7054 8.38534 20.6871 8.2951 20.6517 8.21111C20.6162 8.12713 20.5643 8.05109 20.499 7.9875C20.3651 7.85665 20.1852 7.7834 19.998 7.7834C19.8107 7.7834 19.6309 7.85665 19.497 7.9875V7.989Z"
                                          Fill="{StaticResource aqua}"
                                          Width="auto"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Static.Editable.Border}" />
                                    <Setter Property="Background"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter Property="Fill"
                                            TargetName="arrow"
                                            Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="White" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource aqua}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsPressed"
                                         Value="true">
                                    <Setter Property="Fill"
                                            TargetName="arrow"
                                            Value="{StaticResource ComboBox.Pressed.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Pressed.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource aqua}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Fill"
                                            TargetName="arrow"
                                            Value="{StaticResource ComboBox.Disabled.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                    <Setter Property="Background"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate x:Key="ComboBoxEditableTemplate"
                             TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot"
                      SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                          Width="0" />
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup"
                           AllowsTransparency="true"
                           Grid.ColumnSpan="2"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                           Placement="Bottom"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <theme:SystemDropShadowChrome x:Name="shadow"
                                                      Color="Transparent"
                                                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border x:Name="dropDownBorder"
                                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    BorderThickness="1">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid"
                                          RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas"
                                                HorizontalAlignment="Left"
                                                Height="0"
                                                VerticalAlignment="Top"
                                                Width="0">
                                            <Rectangle x:Name="opaqueRect"
                                                       Fill="{Binding Background, ElementName=dropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton x:Name="toggleButton"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Grid.ColumnSpan="2"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButton}" />
                    <Border x:Name="border"
                            Background="{StaticResource TextBox.Static.Background}"
                            Margin="{TemplateBinding BorderThickness}">
                        <TextBox x:Name="PART_EditableTextBox"
                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                 Margin="{TemplateBinding Padding}"
                                 Style="{StaticResource ComboBoxEditableTextBox}"
                                 VerticalContentAlignment="Center" />
                    </Border>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsEnabled"
                             Value="false">
                        <Setter Property="Opacity"
                                TargetName="border"
                                Value="0.56" />
                    </Trigger>
                    <Trigger Property="IsKeyboardFocusWithin"
                             Value="true">
                        <Setter Property="Foreground"
                                Value="Black" />
                    </Trigger>
                    <Trigger Property="HasDropShadow"
                             SourceName="PART_Popup"
                             Value="true">
                        <Setter Property="Margin"
                                TargetName="shadow"
                                Value="0,0,5,5" />
                        <Setter Property="Color"
                                TargetName="shadow"
                                Value="#71000000" />
                    </Trigger>
                    <Trigger Property="HasItems"
                             Value="false">
                        <Setter Property="Height"
                                TargetName="dropDownBorder"
                                Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping"
                                       Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                       Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll"
                                Value="false" />
                    </MultiTrigger>
                    <Trigger Property="ScrollViewer.CanContentScroll"
                             SourceName="DropDownScrollViewer"
                             Value="false">
                        <Setter Property="Canvas.Top"
                                TargetName="opaqueRect"
                                Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter Property="Canvas.Left"
                                TargetName="opaqueRect"
                                Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxTemplate"
                             TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot"
                      SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                          Width="0" />
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup"
                           AllowsTransparency="true"
                           Grid.ColumnSpan="2"
                           IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                           Margin="1"
                           Placement="Bottom"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <theme:SystemDropShadowChrome x:Name="shadow"
                                                      Color="Transparent"
                                                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border x:Name="dropDownBorder"
                                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    BorderThickness="1">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid"
                                          RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas"
                                                HorizontalAlignment="Left"
                                                Height="0"
                                                VerticalAlignment="Top"
                                                Width="0">
                                            <Rectangle x:Name="opaqueRect"
                                                       Fill="{Binding Background, ElementName=dropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton x:Name="toggleButton"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Grid.ColumnSpan="2"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButton}" />

                    <ContentPresenter x:Name="contentPresenter"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      IsHitTestVisible="false"
                                      Margin="18"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasDropShadow"
                             SourceName="PART_Popup"
                             Value="true">
                        <Setter Property="Margin"
                                TargetName="shadow"
                                Value="0,0,5,5" />
                        <Setter Property="Color"
                                TargetName="shadow"
                                Value="#71000000" />
                    </Trigger>
                    <Trigger Property="HasItems"
                             Value="false">
                        <Setter Property="Height"
                                TargetName="dropDownBorder"
                                Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping"
                                       Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                       Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll"
                                Value="false" />
                    </MultiTrigger>
                    <Trigger Property="ScrollViewer.CanContentScroll"
                             SourceName="DropDownScrollViewer"
                             Value="false">
                        <Setter Property="Canvas.Top"
                                TargetName="opaqueRect"
                                Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter Property="Canvas.Left"
                                TargetName="opaqueRect"
                                Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="ComboBoxStyle1"
                   TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource FocusVisual}" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource gray}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="true" />
                <Setter Property="ScrollViewer.PanningMode"
                        Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="False" />
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxTemplate}" />

                <Style.Triggers>
                    <Trigger Property="IsEditable"
                             Value="true">
                        <Setter Property="IsTabStop"
                                Value="false" />
                        <Setter Property="Padding"
                                Value="2" />
                        <Setter Property="Template"
                                Value="{StaticResource ComboBoxEditableTemplate}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--#endregion-->
        </ResourceDictionary>
    </Application.Resources>
</Application>
